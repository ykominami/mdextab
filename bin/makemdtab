#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require 'bundler/setup'
require 'mdextab'
require 'messagex'

require 'simpleoptparse'

opts = {}
banner = "Usage: bundle exec ruby bin/makemdtab [--debug|--verbose] (-o|--output) outfname (-d|--data) datafname  yamlfname --dataop (fileinclude|yamltomd) -es erubystatic -ev erubyvariable *]"
if ARGV.size == 0
  puts(banner)
  exit(@mes.ec("EXIT_CODE_ARGV"))
end

Simpleoptparse::Simpleoptparse.parse(ARGV , opts , banner , Mdextab::VERSION , nil){ |parser|
  parser.on('--debug'  ) {|x| opts["debug"] = true}
  parser.on('--verbose'  ) {|x| opts["verbose"] = true}
  parser.on('--es path'  ) {|x| opts["fnameStatic"] = x}
  parser.on('--ev path'  ) {|x| opts["fnameVariable"] = x}
  parser.on('-o path', '--output'  ) {|x| opts["output"] = opts["o"] = x}
  parser.on('-d path', '--data'  ) {|x| opts["data"] = opts["d"] = x}
  parser.on('--dataop op') {|x| 
    if /f/.match?(x.downcase)
      opts["dataop"]=:YAML_TO_MD                               
    else
      opts["dataop"]=:FILE_INCLUDE
    end
  }
}
if opts["debug"]
  mes=Messagex::Messagex.new("EXIT_CODE_NORMAL_EXIT", 0, :debug)
elsif opts["verbose"]
  mes=Messagex::Messagex.new("EXIT_CODE_NORMAL_EXIT", 0, :verbose)
else
  mes=Messagex::Messagex.new("EXIT_CODE_NORMAL_EXIT", 0)
end

unless opts["data"]
  puts("Not specified -data")
  puts(banner)
  exit(mes.ec("EXIT_CODE_ARGV_ERROR"))
end

unless opts["output"]
  puts("Not specified -oputut")
  puts(b ewwanner)
  exit(mes.ec("EXIT_CODE_ARGV_ERROR"))
end

rootsettingfname=ARGV[0]

#opts["data"]=
#opts["output"]=

x=Mdextab::Makemdtab.create(opts, opts["fnameVariable"], opts["fnameStatic"], rootsettingfname, mes)

x.makeMd2()
x.postProcess
puts "# makemdtab End #"
exit(mes.ec("EXIT_CODE_NORMAL_EXIT"))
